# cxx_library(
#     name='gtest_internal',
#     header_namespace='gtest/internal',
#     exported_headers=glob(['gtest/googletest/include/gtest/internal/*.h'])
#            ,visibility = ["PUBLIC"],
#     )
# cxx_library(
#     name='gmock_internal',
#     header_namespace='gmock/internal',
#     exported_headers=glob(['gtest/googlemock/include/gmock/internal/*.h'])
#       ,   visibility = ["PUBLIC"],
#     )
# cxx_library(
#     name='gmock_header',
#     header_namespace='gmock',
#     exported_headers=glob(['gtest/googlemock/include/gmock/*.h'])
#       ,   visibility = ["PUBLIC"],
#     )
# # cxx_library
# cxx_library(
#   name = 'gtest',
#   srcs=glob(
#           include = [
#               "gtest/googletest/src/*.cc",
#               # "googletest/src/*.h",
#               # "gtest/googletest/include/gtest/**/*.h",
#               "gtest/googlemock/src/*.cc",
#               # "googlemock/include/gmock/**/*.h",
#           ],
#           exclude = [
#               "gtest/googletest/src/gtest-all.cc",
#               "gtest/googletest/src/gtest_main.cc",
#               "gtest/googlemock/src/gmock-all.cc",
#               "gtest/googlemock/src/gmock_main.cc",
#           ],
#     ),
#     header_namespace = 'gtest',
#     exported_headers =glob([
#        ('gtest/googletest/googletest/include/*.h'),
#        ('gtest/googletest/googletest/include/internal/*.h'),
#        ('gtest/googletest/googlemock/include/gmock/*.h'),
#     ])
    
# #     {
# #     'gtest-assertion-result.h'  :'gtest/googletest/include/gtest-assertion-result.h'  
# #    ,'gtest-matchers.h'          :'gtest/googletest/include/gtest-matchers.h'          
# #    ,'gtest-param-test.h'        :'gtest/googletest/include/gtest-param-test.h'        
# #    ,'gtest-spi.h'               :'gtest/googletest/include/gtest-spi.h'               
# #    ,'gtest-typed-test.h'        :'gtest/googletest/include/gtest-typed-test.h'        
# #    ,'gtest_pred_impl.h'         :'gtest/googletest/include/gtest_pred_impl.h' 
# #    ,'gtest-death-test.h'        :'gtest/googletest/include/gtest-death-test.h'        
# #    ,'gtest-message.h'           :'gtest/googletest/include/gtest-message.h'           
# #    ,'gtest-printers.h'          :'gtest/googletest/include/gtest-printers.h'          
# #    ,'gtest-test-part.h'         :'gtest/googletest/include/gtest-test-part.h'         
# #    ,'gtest.h'                   :'gtest/googletest/include/gtest.h'                   
# #    ,'gtest_prod.h'              :'gtest/googletest/include/gtest_prod.h'
# # }
# # +glob([
# #       ('gtest/googletest/googletest/include/*.h'),
# #       # ('gtest/googletest/googlemock/include/gmock/*.h'),
# #     ])
# ,
#     include_directories= [   
#       ('gtest/googletest/include/'),
#       # ('gtest/googlemock/include/'),
#        'gtest/googletest/']
#     ,
#     headers = glob([
#       ('gtest/googletest/src/*.cc'),
#       ('gtest/googletest/src/*.h'),
#       # ('gtest/googlemock/src/*.cc'),
#       # ('gtest/googlemock/src/*.h'),
#       ('gtest/googletest/include/gtest/*.h'),
#       # ('gtest/googlemock/include/gmock/*.h'),
#       # ('gtest/googlemock/include/gmock/internal/*.h'),
#       ('gtest/googletest/include/gtest/internal/*.h')
#     ]),
#     platform_linker_flags = [
#     #   ('android', []),
#       ('', ['-lpthread']),
#     ],
#        visibility = ["PUBLIC"],

#     # visibility = [
#     #   '//test/...',
#     # ],
#     deps=[':gtest_internal',':gmock_internal']
# )



# cxx_library(
#   name = 'gmock',
#   srcs=glob(
#           include = [
#               # "gtest/googletest/src/*.cc",
#               # "googletest/src/*.h",
#               # "gtest/googletest/include/gtest/**/*.h",
#               "gtest/googlemock/src/*.cc",
#               # "googlemock/include/gmock/**/*.h",
#           ],
#           exclude = [
#               "gtest/googletest/src/gtest-all.cc",
#               "gtest/googletest/src/gtest_main.cc",
#               "gtest/googlemock/src/gmock-all.cc",
#               "gtest/googlemock/src/gmock_main.cc",
#           ],
#     ),
#     header_namespace = 'gmock',
#     exported_headers = glob([
#       # ('gtest/googletest/googletest/include/gtest/*.h'),
#       ('gtest/googletest/googlemock/include/gmock/*.h'),
#     ]),
#     include_directories= [   
#       ('gtest/googletest/include/'),
#       ('gtest/googlemock/include/'),
#        'gtest/googletest/'
#        ]
#     ,
#     headers = glob([
#       # ('gtest/googletest/src/*.cc'),
#       # ('gtest/googletest/src/*.h'),
#       ('gtest/googlemock/src/*.cc'),
#       ('gtest/googlemock/src/*.h'),
#       ('gtest/googletest/include/gtest/*.h'),
#       ('gtest/googlemock/include/gmock/*.h'),
#       ('gtest/googlemock/include/gmock/internal/*.h'),
#       ('gtest/googletest/include/gtest/internal/*.h')
#     ]),
#     platform_linker_flags = [
#     #   ('android', []),
#       ('', ['-lpthread']),
#     ],
#        visibility = ["PUBLIC"],

#     # visibility = [
#     #   '//test/...',
#     # ],
#     deps=[':gtest_internal',':gmock_internal',':gtest',':gmock_header']
# )
